package mvc.controllers;


import helper.DownloadAct;
import helper.JacksonUtil;

import java.io.IOException;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import mvc.service.qsServer;

import org.codehaus.jackson.type.TypeReference;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
@Controller
@RequestMapping(value = "/clear")
public class qsAction {
	private qsServer qsServer;
	
	public qsServer getqsServer() {
		return qsServer;
	}
	@Autowired
	public void setqsServer(qsServer qsServer) {
		this.qsServer = qsServer;
	}
	private JacksonUtil jacksonUtil = JacksonUtil.buildNormalBinder();
	@RequestMapping("/findqs")
	@ResponseBody
	public String findqs(HttpServletRequest request,@RequestParam("postData") String postData) {
		String power_option = String.valueOf(request.getSession().getAttribute("power_option"));
		Map<String, Object> paramMap = jacksonUtil.toObject(postData,new TypeReference<Map<String, Object>>() {});
		String page = String.valueOf(paramMap.get("page"));
		 	int pageIndex = Integer.parseInt(page);//当前页
	        int pageSize =10;//设置每页要展示的数据数量(根据项目需求灵活设置)
	        int rowCount = 0 ;
	        List<Map<String, Object>> listExamine=qsServer.findqs(postData,power_option);//获取总数据量
	        try {
	                rowCount=listExamine.size();//总条数
	               //通过计算，得到分页应该需要分几页，其中不满一页的数据按一页计算
	               if(rowCount%pageSize!=0)
	               {
	                   rowCount = rowCount / pageSize + 1;
	               }
	               else
	               {
	                   rowCount = rowCount / pageSize;
	               }
	           } catch (Exception e) {
	       }
	        String showList=qsServer.findqsb(pageIndex,pageSize,postData,power_option);//根据pageIndex和pageSize获取需要展示的该页数据
	       //转成Json格式
	       String msg = "{\"count\":"+listExamine.size()+",\"pageCount\":"+rowCount+",\"CurrentPage\":"+pageIndex+",\"list\":" + showList + ",\"list2\":" +jacksonUtil.toJson(listExamine)  + "}";
	    return msg;
	}

	@RequestMapping("dddc")
	@ResponseBody
	public String dddc(HttpServletRequest request,
			HttpServletResponse response,@RequestParam("postData") String postData) throws IOException{
		String power_option = String.valueOf(request.getSession().getAttribute("power_option"));
		postData = java.net.URLDecoder.decode(postData, "UTF-8");
		String a[] = {"省","市","渠道","企业","车主","车牌","订单数","总营收","渠道提成率","渠道提成","公司提成率","公司提成","车主提成率","车主提成"};//导出列明
		String b[] = {"PROVINCE","CITY","CHANNEL_NAME","COMPANY_NAME","OWNER_NAME","VEHICLE_NO","COUNT","num","CHANNEL_REVENUE","numa","COMPANY_REVENUE","numb","owner_revenue","numc"};//导出map中的key
		String gzb = "清算管理";//导出sheet名和导出的文件名
		List<Map<String, Object>> list = qsServer.findqs2(postData,power_option);
		DownloadAct.download(request,response,a,b,gzb,list);
		return null;
	}

}
